sample.interval=20000
"<Anonymous>" 
"<Anonymous>" 
"<Anonymous>" 
"close" "save" "<Anonymous>" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
"isBaseVar" "getFoldFun" "constantFoldCall" "constantFold" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "compile" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCompile" 
"browser" "eval" "eval" ".rs.breakOnError" "<Anonymous>" "matrix" "theilsenSlopes" 
"browser" "eval" "eval" ".rs.breakOnError" "<Anonymous>" "matrix" "theilsenSlopes" 
"browser" "eval" "eval" ".rs.breakOnError" "<Anonymous>" "matrix" "theilsenSlopes" 
"browser" "eval" "eval" ".rs.breakOnError" "<Anonymous>" "matrix" "theilsenSlopes" 
"browser" "eval" "eval" ".rs.breakOnError" "<Anonymous>" "matrix" "theilsenSlopes" 
"browser" "eval" "eval" ".rs.breakOnError" "<Anonymous>" "matrix" "theilsenSlopes" 
"browser" "eval" "eval" ".rs.breakOnError" "<Anonymous>" "matrix" "theilsenSlopes" 
"browser" "eval" "eval" ".rs.breakOnError" "<Anonymous>" "matrix" "theilsenSlopes" 
"cmpSym" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "cmpForBody" "h" "tryInline" "cmpCall" "cmp" "genCode" "compile" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCompile" 
"sort" "mean" "median.default" "median" "theilsenSlopes" 
"<Anonymous>" "int_abline" "abline" 
"<Anonymous>" "int_abline" "abline" 
"<Anonymous>" "int_abline" "abline" 
"<Anonymous>" "findCenvVar" "getInlineInfo" "isBaseVar" "FUN" "lapply" "unlist" "Filter" "findLocalsList" "funEnv" "make.functionContext" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.isSourceCall" ".rs.breakOnError" "<Anonymous>" "int_abline" "abline" 
"<Anonymous>" "findCenvVar" "getInlineInfo" "isBaseVar" "FUN" "lapply" "unlist" "Filter" "findLocalsList" "funEnv" "make.functionContext" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.isSourceCall" ".rs.breakOnError" "<Anonymous>" "int_abline" "abline" 
"<Anonymous>" "findCenvVar" "getInlineInfo" "isBaseVar" "FUN" "lapply" "unlist" "Filter" "findLocalsList" "funEnv" "make.functionContext" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.isSourceCall" ".rs.breakOnError" "<Anonymous>" "int_abline" "abline" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" "findCenvVar" "getInlineInfo" "isBaseVar" "FUN" "lapply" "unlist" "Filter" "findLocalsList" "funEnv" "make.functionContext" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.isSourceCall" ".rs.breakOnError" "<Anonymous>" "int_abline" "abline" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" "findCenvVar" "getInlineInfo" "isBaseVar" "FUN" "lapply" "unlist" "Filter" "findLocalsList" "funEnv" "make.functionContext" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.isSourceCall" ".rs.breakOnError" "<Anonymous>" "int_abline" "abline" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" "findCenvVar" "getInlineInfo" "isBaseVar" "FUN" "lapply" "unlist" "Filter" "findLocalsList" "funEnv" "make.functionContext" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.isSourceCall" ".rs.breakOnError" "<Anonymous>" "int_abline" "abline" 
"findCenvVar" "getInlineInfo" "isBaseVar" "FUN" "lapply" "unlist" "Filter" "findLocalsList" "funEnv" "make.functionContext" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.isSourceCall" ".rs.breakOnError" "<Anonymous>" "int_abline" "abline" 
"findCenvVar" "getInlineInfo" "isBaseVar" "FUN" "lapply" "unlist" "Filter" "findLocalsList" "funEnv" "make.functionContext" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.isSourceCall" ".rs.breakOnError" "<Anonymous>" "int_abline" "abline" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" "findCenvVar" "getInlineInfo" "isBaseVar" "FUN" "lapply" "unlist" "Filter" "findLocalsList" "funEnv" "make.functionContext" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.isSourceCall" ".rs.breakOnError" "<Anonymous>" "int_abline" "abline" 
"tryInline" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.isSourceCall" ".rs.breakOnError" "<Anonymous>" "int_abline" "abline" 
