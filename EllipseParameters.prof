sample.interval=20000
"cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "cmpForBody" "h" "tryInline" "cmpCall" "cmp" "genCode" "compile" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCompile" 
"make.argContext" "cmpDispatch" "h" "tryInline" "cmpCall" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "findCenterFromMidpoints" 
"getInlineInfo" "isBaseVar" "getFoldFun" "constantFoldCall" "constantFold" "constantFoldCall" "constantFold" "constantFoldCall" "constantFold" "cmp" "cmpPrim2" "h" "tryInline" "cmpCall" "cmp" "cmpPrim2" "h" "tryInline" "cmpCall" "cmp" "cmpPrim1" "h" "tryInline" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "findNVals" 
"cmpTag" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "cmpForBody" "h" "tryInline" "cmpCall" "cmp" "genCode" "compile" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCompile" 
"sys.function" "formals" "match.arg" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueDescription" "<Anonymous>" 
"<Anonymous>" 
"<Anonymous>" 
"<Anonymous>" 
"<Anonymous>" 
"<Anonymous>" 
"<Anonymous>" 
"close" "save" "<Anonymous>" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
"<Anonymous>" 
"tryCatch" "base::try" 
"conditionMessage" "strsplit" "value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
".rs.getKnitParamsForDocument" ".rs.injectKnitrParamsObject" "<Anonymous>" 
"FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"getInlineInfo" "tryInline" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "f" "Reduce" "<Anonymous>" 
"tryCatch" "base::try" 
"strsplit" "value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"mayCallBrowser" "mayCallBrowserList" "mayCallBrowser" "mayCallBrowserList" "mayCallBrowser" "mayCallBrowserList" "mayCallBrowser" "mayCallBrowserList" "mayCallBrowser" "mayCallBrowserList" "mayCallBrowser" "mayCallBrowserList" "mayCallBrowser" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"cb$putconst" "cmpSubsetDispatch" "h" "tryInline" "cmpCall" "cmp" "cmpPrim2" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "h" "tryInline" "cmpCall" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"Reduce" "<Anonymous>" 
"cb$putcode" "cmpSubsetDispatch" "h" "tryInline" "cmpCall" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.getCompletionsActiveFrame" "Reduce" "<Anonymous>" 
"findCenvVar" "getInlineInfo" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.getCompletionsLibraryContext" "Reduce" "<Anonymous>" 
"mget" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"mget" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"get" ":::" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"utils:::.getHelpFile" "prepare_Rd" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"recurse" "processRdIfdefs" "prepare_Rd" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
":::" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"close" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"asNamespace" "getExportedValue" "::" 
"value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"is.ddsym" "cmpSym" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "cmpBuiltinArgs" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.resolveObjectFromFunctionCall" ".rs.getCompletionsArgument" ".rs.getCompletionsFunction" ".rs.appendCompletions" ".rs.getRCompletions" ".rs.appendCompletions" "<Anonymous>" 
"FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"tryCatchList" "tryCatch" "base::try" 
"FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"::" 
"deparse" "mode" "%in%" "deparse" "mode" "%in%" "deparse" "value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"getExportedValue" "::" 
"tryCatchList" "tryCatch" "base::try" 
"tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"lapply" "FUN" "lapply" "findLocalsList1" "findLocalsList" "funEnv" "make.functionContext" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.getCompletionsFunction" ".rs.appendCompletions" ".rs.getRCompletions" ".rs.appendCompletions" "<Anonymous>" 
"h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "cmpForBody" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.getCompletionsFunction" ".rs.appendCompletions" ".rs.getRCompletions" ".rs.appendCompletions" "<Anonymous>" 
"h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.getCompletionsFunction" ".rs.appendCompletions" ".rs.getRCompletions" ".rs.appendCompletions" "<Anonymous>" 
"cb$savecurloc" "make.codeBuf" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.resolveFormals" ".rs.getCompletionsFunction" ".rs.appendCompletions" ".rs.getRCompletions" ".rs.appendCompletions" "<Anonymous>" 
"lapply" "FUN" "lapply" "findLocalsList1" "findLocalsList" "funEnv" "make.functionContext" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.getCompletionsArgument" ".rs.getCompletionsFunction" ".rs.appendCompletions" ".rs.getRCompletions" ".rs.appendCompletions" "<Anonymous>" 
"findVar" "cmpSym" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.getCompletionsArgument" ".rs.getCompletionsFunction" ".rs.appendCompletions" ".rs.getRCompletions" ".rs.appendCompletions" "<Anonymous>" 
"FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"constantFold" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.getRChainCompletions" ".rs.appendCompletions" "<Anonymous>" 
"tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"::" 
"getExportedValue" "::" 
"base::try" 
"lapply" "FUN" "lapply" "findLocalsList1" "findLocalsList" "findLocals" "as.vector" "unique" "union" "addCenvVars" "compile" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCompile" 
"findFunDef" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "findCenterFromMidpoints" 
"findCenvVar" "getInlineInfo" "isBaseVar" "getFoldFun" "constantFoldCall" "constantFold" "constantFoldCall" "constantFold" "cmp" "h" "tryInline" "cmpCall" "cmp" "cmpPrim2" "h" "tryInline" "cmpCall" "cmp" "cmpPrim2" "h" "tryInline" "cmpCall" "cmp" "cmpPrim1" "h" "tryInline" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "findNVals" 
"structure" "object.size" "<Anonymous>" 
"base::try" 
"<Anonymous>" 
"FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.getHelpFunction" "<Anonymous>" 
"findCenvVar" "getInlineInfo" "tryInline" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"getInlineInfo" "tryInline" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"mget" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"mget" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"mget" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"mget" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"mget" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"asNamespace" "getExportedValue" "::" "do.call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"readRDS" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"readRDS" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"readRDS" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"readRDS" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"readRDS" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"readRDS" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"readRDS" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"readRDS" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"readRDS" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"readRDS" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"readRDS" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"readRDS" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"readRDS" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"readRDS" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"read.dcf" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".read_description" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"readRDS" "lazyLoadDBexec" "tools:::fetchRdDB" "utils:::.getHelpFile" "prepare_Rd" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"fetch" "fun" "lazyLoadDBexec" "tools:::fetchRdDB" "utils:::.getHelpFile" "prepare_Rd" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"close" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"mode" "%in%" "deparse" "mode" "%in%" "deparse" "value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
".rs.getAnywhere" "base::args" "base::format.default" ".rs.getSignature" "<Anonymous>" 
"FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"getExportedValue" "::" 
"tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"findCenvVar" "findVar" "cmpSym" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "cmpForBody" "h" "tryInline" "cmpCall" "cmp" "genCode" "compile" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCompile" 
"tryCatchList" "tryCatch" "base::try" 
"getExportedValue" "::" 
"sapply" ".rs.resolveObjectFromFunctionCall" ".rs.getCompletionsArgument" ".rs.getCompletionsFunction" ".rs.appendCompletions" ".rs.getRCompletions" ".rs.appendCompletions" "<Anonymous>" 
"FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"::" 
"mode" "%in%" "deparse" "value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"cmpCall" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "cmpForBody" "h" "tryInline" "cmpCall" "cmp" "genCode" "compile" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCompile" 
"isBaseVar" "getFoldFun" "constantFoldCall" "constantFold" "constantFoldCall" "constantFold" "constantFoldCall" "constantFold" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "findBVals" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueAsString" "<Anonymous>" 
".deparseOpts" "deparse" "mode" "%in%" "deparse" "mode" "%in%" "deparse" "value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"::" 
"tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
".rs.scalar" ".rs.scalar" ".rs.makeCompletions" ".rs.emptyCompletions" ".rs.getCompletionsNAMESPACE" "Reduce" "<Anonymous>" 
"FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"tryCatchList" "tryCatch" "base::try" 
".rs.doStripSurrounding" ".rs.stripSurrounding" "parse" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "withCallingHandlers" "quietly" ".rs.getAnywhere" "base::args" "base::format.default" ".rs.getSignature" "<Anonymous>" 
"FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"tryCatchList" "tryCatch" "base::try" 
"deparse" "mode" "%in%" "deparse" "mode" "%in%" "deparse" "value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"getFoldFun" "constantFoldCall" "constantFold" "cmp" "cmpComplexAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "cmpForBody" "h" "tryInline" "cmpCall" "cmp" "genCode" "compile" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCompile" 
"deparse" "mode" "%in%" "deparse" "mode" "%in%" "deparse" "value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"::" 
"tryCatch" "base::try" 
"findCenvVar" "findLocVar" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "cmpForBody" "h" "tryInline" "cmpCall" "cmp" "genCode" "compile" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCompile" 
"simpleError" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"getInlineInfo" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "cmpForBody" "h" "tryInline" "cmpCall" "cmp" "genCode" "compile" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCompile" 
"format.default" "format" "format.fun" "paste" "nchar.w" "maybe_truncate" "formObj" "cat" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueDescription" "<Anonymous>" 
"value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"deparse" "value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"capture.output" ".rs.resolveObjectFromFunctionCall" ".rs.getCompletionsFunction" ".rs.appendCompletions" ".rs.getRCompletions" ".rs.appendCompletions" "<Anonymous>" 
"FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
".rs.doStripSurrounding" ".rs.stripSurrounding" ".rs.getAnywhere" ".rs.resolveObjectFromFunctionCall" ".rs.getCompletionsArgument" ".rs.getCompletionsFunction" ".rs.appendCompletions" ".rs.getRCompletions" ".rs.appendCompletions" "<Anonymous>" 
"FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
".deparseOpts" "deparse" "mode" "%in%" "deparse" "value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"deparse" "mode" "%in%" "deparse" "mode" "%in%" "deparse" "value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"tryCatchList" "tryCatch" "base::try" 
"deparse" "mode" "%in%" "deparse" "value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"findLocVar" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "cmpForBody" "h" "tryInline" "cmpCall" "cmp" "genCode" "compile" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCompile" 
"findCenvVar" "getInlineInfo" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "cmpForBody" "h" "tryInline" "cmpCall" "cmp" "genCode" "compile" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCompile" 
"paste0" "arrLenstr" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueDescription" "<Anonymous>" 
"base::try" 
"tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"getExportedValue" "::" 
"deparse" "mode" "%in%" "deparse" "mode" "%in%" "deparse" "value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"getInlineInfo" "isBaseVar" "FUN" "lapply" "unlist" "Filter" "findLocalsList" "findLocals" "as.vector" "unique" "union" "addCenvVars" "compile" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCompile" 
"cmpCallSymFun" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "cmpForBody" "h" "tryInline" "cmpCall" "cmp" "genCode" "compile" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCompile" 
"findCenvVar" "getInlineInfo" "tryInline" "cmpCall" "cmp" "cmpComplexAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "findNVals" 
"asNamespace" "getExportedValue" "::" 
"::" 
"tryCatch" "base::try" 
"FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"tryCatch" "base::try" 
"tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"checkSkipLoopCntxt" "checkSkipLoopCntxtList" "checkSkipLoopCntxt" "h" "tryInline" "cmpCall" "cmp" "genCode" "compile" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCompile" 
"print.default" "print" 
"findCenvVar" "getInlineInfo" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "findNVals" 
"FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"writeLines" "writeLinesUTF8" "of0" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"writeContent" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"base::try" 
"tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"getExportedValue" "::" 
"tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"getExportedValue" "::" 
"value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"findVar" "cmpSym" "cmp" "cmpSubsetDispatch" "h" "tryInline" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "cmpForBody" "h" "tryInline" "cmpCall" "cmp" "genCode" "compile" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCompile" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueAsString" "<Anonymous>" 
"tryCatchList" "tryCatch" "base::try" 
"FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
".rs.emptyCompletions" ".rs.getCompletionsNAMESPACE" "Reduce" "<Anonymous>" 
".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
".Rd_get_section" ".Rd_get_title" "gsub" ".Rd_format_title" "strwrap" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"htmlify" "utils:::getSrcByte" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"base::try" 
"FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
".rs.getKnitParamsForDocument" ".rs.injectKnitrParamsObject" "<Anonymous>" 
"FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
".rs.makeCompletions" ".rs.emptyCompletions" ".rs.getCompletionsLibraryContext" ".rs.appendCompletions" ".rs.getRCompletions" ".rs.appendCompletions" "<Anonymous>" 
"FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"tryCatchList" "tryCatch" "base::try" 
"FUN" "lapply" "findLocalsList1" "findLocalsList" "findLocals" "as.vector" "unique" "union" "addCenvVars" "compile" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCompile" 
"print.default" "print" 
"classMetaName" "getClassDef" "is" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueAsString" "<Anonymous>" 
"FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"get" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "vapply" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"get" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "vapply" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"get" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "vapply" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"get" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "vapply" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"get" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "vapply" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"get" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "vapply" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"get" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "vapply" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"get" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "vapply" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"get" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "vapply" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"get" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "vapply" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"get" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "vapply" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"get" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "vapply" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"get" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "vapply" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"get" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "vapply" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"get" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "vapply" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"lapply" "RdTags" "writeContent" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"mode" "%in%" "deparse" "value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"getExportedValue" "::" 
"FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
".rs.listIndexedPackages" "basename" ".rs.getCompletionsPackages" "Reduce" "<Anonymous>" 
"tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"base::try" 
"tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"base::try" 
"FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"findCenvVar" "getInlineInfo" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "cmpForBody" "h" "tryInline" "cmpCall" "cmp" "genCode" "compile" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCompile" 
"findCenvVar" "getInlineInfo" "isBaseVar" "getFoldFun" "constantFoldCall" "constantFold" "constantFoldCall" "constantFold" "cmp" "cmpPrim2" "h" "tryInline" "cmpCall" "cmp" "cmpPrim2" "h" "tryInline" "cmpCall" "cmp" "cmpPrim2" "h" "tryInline" "cmpCall" "cmp" "cmpBuiltinArgs" "h" "tryInline" "cmpCall" "cmp" "cmpPrim1" "h" "tryInline" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "findNVals" 
"is.scalarOrVector" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueAsString" "<Anonymous>" 
"tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"tryCatchList" "tryCatch" "base::try" 
"tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"getInlineInfo" "isBaseVar" "FUN" "lapply" "unlist" "Filter" "findLocalsList" "findLocals" "as.vector" "unique" "union" "addCenvVars" "compile" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCompile" 
"cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "cmpForBody" "h" "tryInline" "cmpCall" "cmp" "genCode" "compile" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCompile" 
"make.promiseContext" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "findNVals" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueDescription" "<Anonymous>" 
"tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"::" 
"base::try" 
"tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"tryCatch" "base::try" 
"tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"FUN" "lapply" "findLocalsList1" "findLocalsList" "findLocals" "as.vector" "unique" "union" "addCenvVars" "compile" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCompile" 
"cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "cmpForBody" "h" "tryInline" "cmpCall" "cmp" "genCode" "compile" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCompile" 
"cmpCallSymFun" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "findNVals" 
"base::try" 
"tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"tryCatchList" "tryCatch" "base::try" 
"getExportedValue" "::" 
"<Anonymous>" 
"FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"Reduce" "<Anonymous>" 
"base::args" "base::format.default" ".rs.getSignature" "<Anonymous>" 
"::" 
"conditionMessage" "strsplit" "value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"simpleError" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"findLocalsList1" "findLocalsList" "findLocals" "as.vector" "unique" "union" "addCenvVars" "compile" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCompile" 
"constantFold" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "cmpForBody" "h" "tryInline" "cmpCall" "cmp" "genCode" "compile" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCompile" 
"cmpCallSymFun" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "cmpForBody" "h" "tryInline" "cmpCall" "cmp" "genCode" "compile" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCompile" 
"findFunDef" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "cmpForBody" "h" "tryInline" "cmpCall" "cmp" "genCode" "compile" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCompile" 
"getInlineInfo" "isBaseVar" "getFoldFun" "constantFoldCall" "constantFold" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "cmpForBody" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "findPVals" 
"capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueDescription" "<Anonymous>" 
"getExportedValue" "::" 
"tryCatch" "base::try" 
"value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"base::try" 
"base::try" 
"tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"mode" "%in%" "deparse" "value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"base::try" 
"value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"deparse" "value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"deparse" "mode" "%in%" "deparse" "mode" "%in%" "deparse" "value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"findLocalsList1" "findLocalsList" "findLocals" "as.vector" "unique" "union" "addCenvVars" "compile" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCompile" 
"findLocVar" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "cmpForBody" "h" "tryInline" "cmpCall" "cmp" "genCode" "compile" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCompile" 
"print.default" "print" 
"strsplit" "value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"findFunDef" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "cmpForBody" "h" "tryInline" "cmpCall" "cmp" "genCode" "compile" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCompile" 
"print.default" "print" 
"FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"plot.new" "plot.default" "plot" 
"Axis.default" "Axis" "localAxis" "plot.default" "plot" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
"FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"asNamespace" "getExportedValue" "::" "do.call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"readRDS" "index.search" "utils::help" "eval" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"unique.default" "unique" "simplify2array" "RdTags" "get_link" "writeLink" "writeBlock" "writeContent" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"readRDS" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"fetch" "fun" "lazyLoadDBexec" "tools:::fetchRdDB" "utils:::.getHelpFile" "prepare_Rd" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"isBlankRd" "writeWrapped" "writeBlock" "writeContent" "writeContent" "writeBlock" "writeContent" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeContent" "writeBlock" "writeContent" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"simplify2array" "RdTags" "writeContent" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"mget" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"mget" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"readRDS" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"readRDS" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"read.dcf" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".read_description" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"readRDS" "lazyLoadDBexec" "tools:::fetchRdDB" "utils:::.getHelpFile" "prepare_Rd" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"fetch" "fun" "lazyLoadDBexec" "tools:::fetchRdDB" "utils:::.getHelpFile" "prepare_Rd" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"RdTags" "writeContent" "writeWrapped" "writeBlock" "writeContent" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"htmlify" "utils:::getSrcByte" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"isBlankRd" "writeContent" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"as.list" "lapply" "RdTags" "writeContent" "writeHref" "writeLink" "writeBlock" "writeContent" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"isBlankRd" "writeWrapped" "writeBlock" "writeContent" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"ifelse" "urlify" "paste0" "writeLink" "writeBlock" "writeContent" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"readRDS" "FUN" "lapply" ".rs.getCompletionsHelp" "<Anonymous>" 
"readRDS" "FUN" "lapply" ".rs.getCompletionsHelp" "<Anonymous>" 
".rs.fuzzyMatches" ".rs.selectFuzzyMatches" "FUN" "lapply" ".rs.getCompletionsHelp" "<Anonymous>" 
"readRDS" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" "<Anonymous>" 
"readRDS" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" "<Anonymous>" 
"readRDS" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" "<Anonymous>" 
"readRDS" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" "<Anonymous>" 
"readRDS" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" "<Anonymous>" 
"readRDS" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" "<Anonymous>" 
"readRDS" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" "<Anonymous>" 
"readRDS" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" "<Anonymous>" 
"readRDS" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" "<Anonymous>" 
"readRDS" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" "<Anonymous>" 
"readRDS" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" "<Anonymous>" 
"readRDS" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" "<Anonymous>" 
"readRDS" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" "<Anonymous>" 
"readRDS" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" "<Anonymous>" 
"readRDS" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" "<Anonymous>" 
"readRDS" "lazyLoadDBexec" "tools:::fetchRdDB" "utils:::.getHelpFile" "prepare_Rd" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" "<Anonymous>" 
"fetch" "fun" "lazyLoadDBexec" "tools:::fetchRdDB" "utils:::.getHelpFile" "prepare_Rd" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" "<Anonymous>" 
".Rd_get_text" ".Rd_get_title" "gsub" ".Rd_format_title" "strwrap" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" "<Anonymous>" 
"isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeContent" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" "<Anonymous>" 
"close" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" "<Anonymous>" 
"hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"hsearch_db" "help.search" "eval" "eval" "?" 
"hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"hsearch_db" "help.search" "eval" "eval" "?" 
"hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"hsearch_db" "help.search" "eval" "eval" "?" 
"hsearch_db" "help.search" "eval" "eval" "?" 
"hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"hsearch_db" "help.search" "eval" "eval" "?" 
"hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"help.search" "eval" "eval" "?" 
"hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"hsearch_db" "help.search" "eval" "eval" "?" 
"hsearch_db" "help.search" "eval" "eval" "?" 
"hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"hsearch_db" "help.search" "eval" "eval" "?" 
"hsearch_db" "help.search" "eval" "eval" "?" 
"hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"hsearch_db" "help.search" "eval" "eval" "?" 
"hsearch_db" "help.search" "eval" "eval" "?" 
"hsearch_db" "help.search" "eval" "eval" "?" 
"hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"hsearch_db" "help.search" "eval" "eval" "?" 
"hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"hsearch_db" "help.search" "eval" "eval" "?" 
"hsearch_db" "help.search" "eval" "eval" "?" 
"hsearch_db" "help.search" "eval" "eval" "?" 
"hsearch_db" "help.search" "eval" "eval" "?" 
"hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"hsearch_db" "help.search" "eval" "eval" "?" 
"hsearch_db" "help.search" "eval" "eval" "?" 
"hsearch_db" "help.search" "eval" "eval" "?" 
"hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"hsearch_db" "help.search" "eval" "eval" "?" 
"hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"hsearch_db" "help.search" "eval" "eval" "?" 
"hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"hsearch_db" "help.search" "eval" "eval" "?" 
"hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"hsearch_db" "help.search" "eval" "eval" "?" 
"hsearch_db" "help.search" "eval" "eval" "?" 
"hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"hsearch_db" "help.search" "eval" "eval" "?" 
"hsearch_db" "help.search" "eval" "eval" "?" 
"hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"hsearch_db" "help.search" "eval" "eval" "?" 
"hsearch_db" "help.search" "eval" "eval" "?" 
"hsearch_db" "help.search" "eval" "eval" "?" 
"hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"hsearch_db" "help.search" "eval" "eval" "?" 
"hsearch_db" "help.search" "eval" "eval" "?" 
"hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "merge_vignette_index" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "merge_vignette_index" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "merge_vignette_index" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "merge_vignette_index" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "merge_vignette_index" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "merge_demo_index" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"merge_demo_index" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "merge_vignette_index" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "merge_demo_index" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "merge_vignette_index" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "merge_vignette_index" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"merge_vignette_index" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "merge_vignette_index" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "merge_demo_index" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "merge_demo_index" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "merge_demo_index" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "merge_vignette_index" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "merge_vignette_index" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "merge_vignette_index" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "merge_vignette_index" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "merge_vignette_index" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "merge_vignette_index" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "merge_vignette_index" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "merge_vignette_index" "hsearch_db" "help.search" "eval" "eval" "?" 
"help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "merge_vignette_index" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "merge_vignette_index" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"merge_vignette_index" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "merge_vignette_index" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"merge_demo_index" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "merge_vignette_index" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "merge_vignette_index" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "merge_vignette_index" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "merge_vignette_index" "hsearch_db" "help.search" "eval" "eval" "?" 
"length" "dim.data.frame" "dim" "dim" "nrow" "merge_vignette_index" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
":::" "hsearch_db" "help.search" "eval" "eval" "?" 
"hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "merge_vignette_index" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"merge_vignette_index" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "merge_vignette_index" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "merge_vignette_index" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "hsearch_db" "help.search" "eval" "eval" "?" 
"readRDS" "merge_vignette_index" "hsearch_db" "help.search" "eval" "eval" "?" 
"hsearch_db" "help.search" "eval" "eval" "?" 
"hsearch_db" "help.search" "eval" "eval" "?" 
"hsearch_db" "help.search" "eval" "eval" "?" 
"rowSums" "FUN" "lapply" "unlist" "hsearch_db" "help.search" "eval" "eval" "?" 
"rowSums" "FUN" "lapply" "unlist" "hsearch_db" "help.search" "eval" "eval" "?" 
"readLines" ".get_standard_Rd_keywords_with_descriptions" "hsearch_db" "help.search" "eval" "eval" "?" 
"readLines" ".get_standard_Rd_keywords_with_descriptions" "hsearch_db" "help.search" "eval" "eval" "?" 
".get_standard_Rd_keywords_with_descriptions" "hsearch_db" "help.search" "eval" "eval" "?" 
"make.names" ".rowNamesDF<-" "as.data.frame.matrix" "FUN" "lapply" "hsearch_db" "help.search" "eval" "eval" "?" 
"search_fun" "search_db_field" "rbind" "help.search" "eval" "eval" "?" 
"search_fun" "search_db_field" "rbind" "help.search" "eval" "eval" "?" 
"search_fun" "search_db_field" "rbind" "help.search" "eval" "eval" "?" 
"search_fun" "search_db_field" "rbind" "rbind" "help.search" "eval" "eval" "?" 
"search_fun" "search_db_field" "rbind" "rbind" "help.search" "eval" "eval" "?" 
"FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"readRDS" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"htmlify" "utils:::getSrcByte" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"isBlankRd" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"utils:::getSrcByte" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"plot.new" "plot.histogram" "plot" "hist.default" "hist" 
"close" "save" "<Anonymous>" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
"FUN" "lapply" "find.package" "index.search" "help" "eval" "eval" "?" 
"readRDS" "FUN" "lapply" "find.package" "index.search" "help" "eval" "eval" "?" 
"readRDS" "FUN" "lapply" "find.package" "index.search" "help" "eval" "eval" "?" 
"readRDS" "index.search" "help" "eval" "eval" "?" 
"readRDS" "index.search" "help" "eval" "eval" "?" 
"readRDS" "index.search" "help" "eval" "eval" "?" 
"readRDS" "index.search" "help" "eval" "eval" "?" 
"readRDS" "index.search" "help" "eval" "eval" "?" 
"readRDS" "index.search" "help" "eval" "eval" "?" 
"readRDS" "index.search" "help" "eval" "eval" "?" 
"readRDS" "index.search" "help" "eval" "eval" "?" 
"readRDS" "index.search" "help" "eval" "eval" "?" 
"print.help_files_with_topic" "<Anonymous>" 
"print.help_files_with_topic" "<Anonymous>" 
"print.help_files_with_topic" "<Anonymous>" 
"print.help_files_with_topic" "<Anonymous>" 
"print.help_files_with_topic" "<Anonymous>" 
"print.help_files_with_topic" "<Anonymous>" 
"print.help_files_with_topic" "<Anonymous>" 
"print.help_files_with_topic" "<Anonymous>" 
"writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeBlock" "writeContent" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "withCallingHandlers" "<Anonymous>" 
"isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "withCallingHandlers" "<Anonymous>" 
"addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "withCallingHandlers" "<Anonymous>" 
"isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "withCallingHandlers" "<Anonymous>" 
"simplify2array" "RdTags" "writeContent" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "withCallingHandlers" "<Anonymous>" 
".rs.doStripSurrounding" ".rs.stripSurrounding" ".rs.getAnywhere" ".rs.resolveObjectFromFunctionCall" ".rs.getCompletionsArgument" ".rs.getCompletionsFunction" ".rs.appendCompletions" ".rs.getRCompletions" ".rs.appendCompletions" "<Anonymous>" 
"FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"axis" "plot.histogram" "plot" "hist.default" "hist" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
"plot.histogram" "plot" "hist.default" "hist" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
"FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"plot.new" "plot.histogram" "plot" "hist.default" "hist" 
"close" "save" "<Anonymous>" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
"grDevices:::png" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"deparse" "paste" "hist.default" "hist" 
"close" "save" "<Anonymous>" 
"plot.histogram" "plot" "hist.default" "hist" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
"plot.histogram" "plot" "hist.default" "hist" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
"FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"getExportedValue" "::" ".rs.isCustomCompletionsEnabled" "<Anonymous>" 
"FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"getInlineInfo" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.callsUseMethod" ".rs.isS3Generic" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.resolveFormals" ".rs.getCompletionsFunction" ".rs.appendCompletions" ".rs.getRCompletions" ".rs.appendCompletions" "<Anonymous>" 
"FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"readRDS" "index.search" "utils::help" "eval" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpArgument" "<Anonymous>" 
"isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpArgument" "<Anonymous>" 
"isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpArgument" "<Anonymous>" 
"isBlankRd" "writeWrapped" "writeBlock" "writeContent" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpArgument" "<Anonymous>" 
"urlify" "paste0" "writeLink" "writeBlock" "writeContent" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpArgument" "<Anonymous>" 
"addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpArgument" "<Anonymous>" 
"plot.new" "plot.histogram" "plot" "hist.default" "hist" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
"plot.new" "plot.histogram" "plot" "hist.default" "hist" 
"<Anonymous>" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
"axis" "plot.histogram" "plot" "hist.default" "hist" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
"getExportedValue" "::" 
"tryCatchList" "tryCatch" "base::try" 
"value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"mget" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"mget" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"mget" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"mget" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"formals" "as.list" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"htmlify" "utils:::getSrcByte" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"base::try" 
"::" 
"tryCatchList" "tryCatch" "base::try" 
"lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"::" 
"value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"plot.new" "plot.histogram" "plot" "hist.default" "hist" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
"plot.new" "plot.histogram" "plot" "hist.default" "hist" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
"grDevices:::png" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"close" "save" "<Anonymous>" 
"try" "plot.new" "plot.histogram" "plot" "hist.default" "hist" 
"close" "save" "<Anonymous>" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
"plot.histogram" "plot" "hist.default" "hist" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
"grDevices:::png" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"plot.new" "plot.histogram" "plot" "hist.default" "hist" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
"plot.new" "plot.histogram" "plot" "hist.default" "hist" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
".make_numeric_version" "R_system_version" "package_version" "getRversion" "grDevices::recordPlot" "<Anonymous>" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
"plot.new" "plot.histogram" "plot" "hist.default" "hist" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
"plot.new" "plot.histogram" "plot" "hist.default" "hist" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
"plot.histogram" "plot" "hist.default" "hist" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
"plot.histogram" "plot" "hist.default" "hist" 
"plot.new" "plot.histogram" "plot" "hist.default" "hist" 
"close" "save" "<Anonymous>" 
"hist" 
"close" "save" "<Anonymous>" 
"[.simple.list" "[" "paste" ".make_numeric_version" "R_system_version" "package_version" "getRversion" "grDevices::recordPlot" "<Anonymous>" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
"plot.new" "plot.histogram" "plot" "hist.default" "hist" 
"close" "save" "<Anonymous>" 
"plot.histogram" "plot" "hist.default" "hist" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
"plot.new" "plot.histogram" "plot" "hist.default" "hist" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
"<Anonymous>" 
"plot.new" "plot.histogram" "plot" "hist.default" "hist" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
"plot.histogram" "plot" "hist.default" "hist" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
"plot.new" "plot.histogram" "plot" "hist.default" "hist" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
"FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"cmpCallSymFun" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.onAvailablePackagesStale" ".rs.availablePackages" "<Anonymous>" 
"findCenvVar" "findFunDef" "cmpCall" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.onAvailablePackagesStale" ".rs.availablePackages" "<Anonymous>" 
".rs.runAsyncRProcess" ".rs.onAvailablePackagesStale" ".rs.availablePackages" "<Anonymous>" 
".rs.runAsyncRProcess" ".rs.onAvailablePackagesStale" ".rs.availablePackages" "<Anonymous>" 
"value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"tryCatch" "base::try" 
"withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.tryCatch" ".rs.onAvailablePackagesReady" "<Anonymous>" 
"withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.tryCatch" ".rs.onAvailablePackagesReady" "<Anonymous>" 
"withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.tryCatch" ".rs.onAvailablePackagesReady" "<Anonymous>" 
"withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.tryCatch" ".rs.onAvailablePackagesReady" "<Anonymous>" 
"withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.tryCatch" ".rs.onAvailablePackagesReady" "<Anonymous>" 
"withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.tryCatch" ".rs.onAvailablePackagesReady" "<Anonymous>" 
"withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.tryCatch" ".rs.onAvailablePackagesReady" "<Anonymous>" 
".rs.enqueClientEvent" "<Anonymous>" 
"strsplit" "unlist" "srcfilecopy" "parse" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.tryCatch" ".rs.parsePackageDependencies" ".rs.discoverPackageDependencies" "<Anonymous>" 
"parse" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.tryCatch" ".rs.parsePackageDependencies" ".rs.discoverPackageDependencies" "<Anonymous>" 
".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.parsePackageDependencies" ".rs.discoverPackageDependencies" "<Anonymous>" 
".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.parsePackageDependencies" ".rs.discoverPackageDependencies" "<Anonymous>" 
"fn" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.parsePackageDependencies" ".rs.discoverPackageDependencies" "<Anonymous>" 
"fn" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.parsePackageDependencies" ".rs.discoverPackageDependencies" "<Anonymous>" 
".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" 