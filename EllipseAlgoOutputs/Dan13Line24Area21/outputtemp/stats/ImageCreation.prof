sample.interval=20000
"Ops.imager_array" "convert.im.toPNG" "eval" "eval" "%>%" "save.png" "save.image" 
"imrotate" "eval" "eval" "%>%" "convert.im.toPNG" "eval" "eval" "%>%" "save.png" "save.image" 
"function_list[[k]]" "withVisible" "freduce" "_fseq" "eval" "eval" "withVisible" "%>%" "save.png" "save.image" 
"function_list[[k]]" "withVisible" "freduce" "_fseq" "eval" "eval" "withVisible" "%>%" "save.png" "save.image" 
"function_list[[k]]" "withVisible" "freduce" "_fseq" "eval" "eval" "withVisible" "%>%" "save.png" "save.image" 
"function_list[[k]]" "withVisible" "freduce" "_fseq" "eval" "eval" "withVisible" "%>%" "save.png" "save.image" 
"function_list[[k]]" "withVisible" "freduce" "_fseq" "eval" "eval" "withVisible" "%>%" "save.png" "save.image" 
"function_list[[k]]" "withVisible" "freduce" "_fseq" "eval" "eval" "withVisible" "%>%" "save.png" "save.image" 
"function_list[[k]]" "withVisible" "freduce" "_fseq" "eval" "eval" "withVisible" "%>%" "save.png" "save.image" 
"function_list[[k]]" "withVisible" "freduce" "_fseq" "eval" "eval" "withVisible" "%>%" "save.png" "save.image" 
"function_list[[k]]" "withVisible" "freduce" "_fseq" "eval" "eval" "withVisible" "%>%" "save.png" "save.image" 
"function_list[[k]]" "withVisible" "freduce" "_fseq" "eval" "eval" "withVisible" "%>%" "convert.im.toPNG" "eval" "eval" "%>%" "save.png" "save.image" 
"function_list[[k]]" "withVisible" "freduce" "_fseq" "eval" "eval" "withVisible" "%>%" "save.png" "save.image" 
"range" "range" "renorm" "as.raster.cimg" "as.raster" "plot.cimg" "plot" 
"Ops.imager_array" "renorm" "as.raster.cimg" "as.raster" "plot.cimg" "plot" 
"imsplit" "channels" "eval" "eval" "%>%" "as.raster.cimg" "as.raster" "plot.cimg" "plot" 
"as.raster.cimg" "as.raster" "plot.cimg" "plot" 
"as.raster.cimg" "as.raster" "plot.cimg" "plot" 
"plot.cimg" "plot" 
"contourLines" "function_list[[k]]" "withVisible" "freduce" "_fseq" "eval" "eval" "withVisible" "%>%" "contours.pixset" "contours" "eval" "eval" "%>%" "highlight" 
"lines.default" "lines" ".f" "map" "purrr::walk" "function_list[[k]]" "withVisible" "freduce" "_fseq" "eval" "eval" "withVisible" "%>%" "highlight" 
"lines.default" "lines" ".f" "map" "purrr::walk" "function_list[[k]]" "withVisible" "freduce" "_fseq" "eval" "eval" "withVisible" "%>%" "highlight" 
"lines.default" "lines" ".f" "map" "purrr::walk" "function_list[[k]]" "withVisible" "freduce" "_fseq" "eval" "eval" "withVisible" "%>%" "highlight" 
"lines.default" "lines" ".f" "map" "purrr::walk" "function_list[[k]]" "withVisible" "freduce" "_fseq" "eval" "eval" "withVisible" "%>%" "highlight" 
"as.list" "par" "plot.xy" "lines.default" "lines" ".f" "map" "purrr::walk" "function_list[[k]]" "withVisible" "freduce" "_fseq" "eval" "eval" "withVisible" "%>%" "highlight" 
"lines.default" "lines" ".f" "map" "purrr::walk" "function_list[[k]]" "withVisible" "freduce" "_fseq" "eval" "eval" "withVisible" "%>%" "highlight" 
"lines.default" "lines" ".f" "map" "purrr::walk" "function_list[[k]]" "withVisible" "freduce" "_fseq" "eval" "eval" "withVisible" "%>%" "highlight" 
"lines.default" "lines" ".f" "map" "purrr::walk" "function_list[[k]]" "withVisible" "freduce" "_fseq" "eval" "eval" "withVisible" "%>%" "highlight" 
"lines.default" "lines" ".f" "map" "purrr::walk" "function_list[[k]]" "withVisible" "freduce" "_fseq" "eval" "eval" "withVisible" "%>%" "highlight" 
"lines.default" "lines" ".f" "map" "purrr::walk" "function_list[[k]]" "withVisible" "freduce" "_fseq" "eval" "eval" "withVisible" "%>%" "highlight" 
"lines.default" "lines" ".f" "map" "purrr::walk" "function_list[[k]]" "withVisible" "freduce" "_fseq" "eval" "eval" "withVisible" "%>%" "highlight" 
".f" "map" "purrr::walk" "function_list[[k]]" "withVisible" "freduce" "_fseq" "eval" "eval" "withVisible" "%>%" "highlight" 
"lines.default" "lines" ".f" "map" "purrr::walk" "function_list[[k]]" "withVisible" "freduce" "_fseq" "eval" "eval" "withVisible" "%>%" "highlight" 
"lines.default" "lines" ".f" "map" "purrr::walk" "function_list[[k]]" "withVisible" "freduce" "_fseq" "eval" "eval" "withVisible" "%>%" "highlight" 
"lines.default" "lines" ".f" "map" "purrr::walk" "function_list[[k]]" "withVisible" "freduce" "_fseq" "eval" "eval" "withVisible" "%>%" "highlight" 
"lines.default" "lines" ".f" "map" "purrr::walk" "function_list[[k]]" "withVisible" "freduce" "_fseq" "eval" "eval" "withVisible" "%>%" "highlight" 
"lines.default" "lines" ".f" "map" "purrr::walk" "function_list[[k]]" "withVisible" "freduce" "_fseq" "eval" "eval" "withVisible" "%>%" "highlight" 
"plot.xy" "lines.default" "lines" ".f" "map" "purrr::walk" "function_list[[k]]" "withVisible" "freduce" "_fseq" "eval" "eval" "withVisible" "%>%" "highlight" 
"as.list" "par" "plot.xy" "lines.default" "lines" ".f" "map" "purrr::walk" "function_list[[k]]" "withVisible" "freduce" "_fseq" "eval" "eval" "withVisible" "%>%" "highlight" 
".f" "map" "purrr::walk" "function_list[[k]]" "withVisible" "freduce" "_fseq" "eval" "eval" "withVisible" "%>%" "highlight" 
"plot.xy" "lines.default" "lines" ".f" "map" "purrr::walk" "function_list[[k]]" "withVisible" "freduce" "_fseq" "eval" "eval" "withVisible" "%>%" "highlight" 
"par" "plot.xy" "lines.default" "lines" ".f" "map" "purrr::walk" "function_list[[k]]" "withVisible" "freduce" "_fseq" "eval" "eval" "withVisible" "%>%" "highlight" 
"lines.default" "lines" ".f" "map" "purrr::walk" "function_list[[k]]" "withVisible" "freduce" "_fseq" "eval" "eval" "withVisible" "%>%" "highlight" 
"lines.default" "lines" ".f" "map" "purrr::walk" "function_list[[k]]" "withVisible" "freduce" "_fseq" "eval" "eval" "withVisible" "%>%" "highlight" 
"dev.off" 
"dev.off" 
"Ops.imager_array" "as.cimg.pixset" "as.cimg" "eval" "eval" "%>%" "plot.pixset" "plot" 
"plot.new" "plot.cimg" "plot" "function_list[[k]]" "withVisible" "freduce" "_fseq" "eval" "eval" "withVisible" "%>%" "plot.pixset" "plot" 
"function_list[[k]]" "withVisible" "freduce" "_fseq" "eval" "eval" "withVisible" "%>%" "as.raster.cimg" "as.raster" "plot.cimg" "plot" "function_list[[k]]" "withVisible" "freduce" "_fseq" "eval" "eval" "withVisible" "%>%" "plot.pixset" "plot" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".f" "map" "purrr::walk" 
"dev.off" 
